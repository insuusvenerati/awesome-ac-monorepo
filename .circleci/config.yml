version: 2.1

jobs:
  docker_build_tag:
    docker:
      - image: cimg/base:2020.01
        auth:
          username: stiforr
          password: $DOCKER_PASS
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
          version: 19.03.13
      - restore_cache:
          key: repo-cache-{{ .Environment.CACHE_VERSION }}
      - run:
          name: Docker login
          command: docker login -u stiforr -p $DOCKER_PASS
      - run:
          name: Build docker image with tag
          command: docker build -t stiforr/awesome-ac:$CIRCLE_TAG .
      - run:
          name: Push docker Image
          command: docker push stiforr/awesome-ac:$CIRCLE_TAG
  docker_build_latest:
    docker:
      - image: cimg/base:2020.01
        auth:
          username: stiforr
          password: $DOCKER_PASS
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
          version: 19.03.13
      - restore_cache:
          key: repo-cache-{{ .Environment.CACHE_VERSION }}
      - run:
          name: Docker login
          command: docker login -u stiforr -p $DOCKER_PASS
      - run:
          name: Build docker image with latest
          command: docker build -t stiforr/awesome-ac:latest .
      - run:
          name: Push docker Image
          command: docker push stiforr/awesome-ac:latest
  checkout:
    docker:
      - image: 'circleci/node:14'
        auth:
          username: stiforr
          password: $DOCKER_PASS
    working_directory: ~/awesome-ac
    steps:
      - checkout
      - run:
          name: Checkout Submodules
          command: |
            git submodule init
            git submodule update
      - save_cache:
          paths:
            - '~/awesome-ac'
          key: repo-cache-{{ .Environment.CACHE_VERSION }}
  install_deps:
    docker:
      - image: 'circleci/node:14'
        auth:
          username: stiforr
          password: $DOCKER_PASS
    working_directory: ~/awesome-ac
    steps:
      - restore_cache:
          key: repo-cache-{{ .Environment.CACHE_VERSION }}
      - restore_cache:
          key: deps-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/awesome-ac/yarn.lock" }}
      - run: yarn install --frozen-lockfile --cache-folder /home/circleci/awesome-ac/.cache/yarn
      - save_cache:
          paths:
            - '~/awesome-ac/.cache'
            - '~/awesome-ac/node_modules'
          key: deps-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/awesome-ac/yarn.lock" }}
  build:
    docker:
      - image: 'circleci/node:14'
    working_directory: ~/awesome-ac
    steps:
      - checkout
      - restore_cache:
          key: repo-cache-{{ .Environment.CACHE_VERSION }}
      - restore_cache:
          key: deps-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/awesome-ac/yarn.lock" }}
      - run:
          name: install
          command: yarn install --frozen-lockfile --cache-folder /home/circleci/awesome-ac/.cache/yarn
      - run:
          name: build
          command: yarn nx build awesome-ac
      - save_cache:
          paths:
            - '~/awesome-ac/.cache'
            - '~/awesome-ac/node_modules'
            - '~/awesome-ac/dist/apps/awesome-ac/.next/cache'
          key: deps-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/awesome-ac/yarn.lock" }}

  end-to-end:
    docker:
      - image: 'cypress/base:14.15.0'
    working_directory: ~/awesome-ac
    steps:
      - checkout
      - restore_cache:
          key: repo-cache-{{ .Environment.CACHE_VERSION }}
      - restore_cache:
          key: deps-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/awesome-ac/yarn.lock" }}
      - run:
          name: install
          command: yarn install --frozen-lockfile --cache-folder /home/circleci/awesome-ac/.cache/yarn
      - run:
          name: Run E2E Tests
          command: yarn nx e2e awesome-ac-e2e
  lint:
    docker:
      - image: 'circleci/node:14'
    working_directory: ~/awesome-ac
    steps:
      - restore_cache:
          key: repo-cache-{{ .Environment.CACHE_VERSION }}
      - restore_cache:
          key: deps-cache-{{ .Environment.CACHE_VERSION }}-{{ checksum "/home/circleci/awesome-ac/yarn.lock" }}
      - run:
          name: install
          command: yarn install --frozen-lockfile --cache-folder /home/circleci/awesome-ac/.cache/yarn
      - run:
          name: Lint code
          command: yarn nx lint awesome-ac
workflows:
  build_tag:
    jobs:
      - checkout:
          filters:
            tags:
              only: /^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$/
            branches:
              ignore: /.*/
      - build:
          requires:
            - checkout
            - install_deps
          filters:
            tags:
              only: /^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$/
            branches:
              ignore: /.*/
      - install_deps:
          requires:
            - checkout
          filters:
            tags:
              only: /^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$/
            branches:
              ignore: /.*/
      - lint:
          requires:
            - checkout
            - install_deps
          filters:
            tags:
              only: /^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$/
            branches:
              ignore: /.*/
      - end-to-end:
          requires:
            - checkout
            - install_deps
          filters:
            tags:
              only: /^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$/
            branches:
              ignore: /.*/
      - docker_build_tag:
          requires:
            - checkout
            - build
            - install_deps
            - end-to-end
            - lint
          filters:
            tags:
              only: /^((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$/
            branches:
              ignore: /.*/
  build_install:
    jobs:
      - checkout
      - build:
          requires:
            - checkout
            - install_deps
      - install_deps:
          requires:
            - checkout
      - lint:
          requires:
            - checkout
            - install_deps
      - end-to-end:
          requires:
            - checkout
            - install_deps
      - docker_build_latest:
          requires:
            - checkout
            - build
            - install_deps
            - end-to-end
            - lint
